"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(e,t){"function"==typeof define&&define.amd?define(t):"function"==typeof define?define(t):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=t():e.easyDom=t()}("undefined"!=typeof window?window:void 0,function(){function e(e){return document.querySelector(e)}function t(e){return document.querySelectorAll(e)}function o(e){if("object"!==(void 0===e?"undefined":_typeof(e)))throw new TypeError("addClass:first param must be a node!");for(var t=arguments.length,o=Array(t>1?t-1:0),r=1;r<t;r++)o[r-1]=arguments[r];var n=o,f=e.className,i=[],a=f.split(" ");a=a.concat(n);for(var s=0;s<a.length;s++)a.indexOf(a[s])===s&&i.push(a[s]);e.className=i.join(" ")}function r(e){if("object"!==(void 0===e?"undefined":_typeof(e)))throw new TypeError("removeClass:first param must be a node!");for(var t=arguments.length,o=Array(t>1?t-1:0),r=1;r<t;r++)o[r-1]=arguments[r];for(var n=o,f=e.className,i=f.split(" "),a=0;a<n.length;a++)for(var s=0;s<i.length;s++)if(i[s]===n[a]){i.splice(s,1);break}e.className=i.join(" ")}function n(e,t){if("object"!==(void 0===e?"undefined":_typeof(e)))throw new TypeError("toggleClass:first param must be a node!");var o=e.className,r=o.split(" ");if(r.some(function(e,o,r){return e===t})){for(var n=0;n<r.length;n++)if(r[n]===t){r.splice(n,1);break}}else r.push(t);e.className=r.join(" ")}function f(e,t){if("number"!=typeof e||"number"!=typeof t)throw new TypeError("getTransZ:all params must be number");return e/2/Math.tan(t/2/180*Math.PI)}function i(e,t,o){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if("object"!==(void 0===e?"undefined":_typeof(e)))throw new TypeError("style:first param must be a node!");if(t=t.replace(/-([a-z])/gi,function(e,t){return t.toUpperCase()}),!o)return e.style[t];r?["-Moz-","-O-","-Ms-","-Webkit-",""].forEach(function(r){e.style[r+t]=o}):e.style[t]=o}function a(e,t){for(var o=e.length,r=0;r<o;r++)t(e[r],r)}function s(e,t,o){if("object"!==(void 0===e?"undefined":_typeof(e)))throw new TypeError("attr:first param must be a node!");if(!o)return e.key?e.key:e.getAttribute(t);e.key?e.key=o:e.setAttribute(t,o)}return{$:e,$$:t,addClass:o,removeClass:r,toggleClass:n,getTransZ:f,style:i,forEach:a,attr:s}});